#/bin/python3
import os
import random
import string
from pathlib import Path
from getpass import getuser
import argparse

# Standard folders we will randomly pick from
FOLDER_NAMES = ["Documents", "Downloads", "Pictures", "Music", "Videos", "Projects", "Notes"]

# File extensions and content generators
FILE_TYPES = {
    ".txt": lambda name: f"This is a text file named {name}.",
    ".md": lambda name: f"# {name}\nGenerated markdown content.\n",
    ".html": lambda name: f"<html><body><h1>{name}</h1></body></html>",
    ".csv": lambda name: "id,name,value\n1,Alice,42\n2,Bob,36\n",
    ".json": lambda name: '{ "name": "%s", "status": "generated" }' % name,
    ".ini": lambda name: "[settings]\noption=true\n",
    ".yaml": lambda name: "app:\n  name: {}\n".format(name),
    ".log": lambda name: "[INFO] Generated log file.\n",
    ".py": lambda name: f"#!/usr/bin/env python3\nprint('Hello from {name}')\n",
    ".sh": lambda name: f"#!/bin/bash\necho 'Running {name}'\n",
    ".jpg": lambda _: b"\xff\xd8\xff",  # JPEG header
    ".png": lambda _: b"\x89PNG\r\n\x1a\n",
    ".mp3": lambda _: b"ID3",
    ".mp4": lambda _: b"\x00\x00\x00\x20ftypmp42",
}

def get_home_dir() -> Path:
    return Path(os.path.expanduser(f"~{getuser()}"))

def random_filename(length=8):
    return ''.join(random.choices(string.ascii_lowercase + string.digits, k=length))

def generate_random_file(base_path: Path):
    folder = random.choice(FOLDER_NAMES)
    extension = random.choice(list(FILE_TYPES.keys()))
    filename = f"{random_filename()}{extension}"

    file_path = base_path / folder / filename
    file_path.parent.mkdir(parents=True, exist_ok=True)

    content_gen = FILE_TYPES[extension]
    if isinstance(content_gen("sample"), bytes):
        file_path.write_bytes(content_gen("sample"))
    else:
        file_path.write_text(content_gen(filename))
    
    print(f"[+] Created: {file_path}")

def main():
    parser = argparse.ArgumentParser(description="Populate home with X random files.")
    parser.add_argument("--count", "-n", type=int, default=20, help="Number of random files to create")
    args = parser.parse_args()

    base_path = get_home_dir()
    print(f"[*] Creating {args.count} random files in: {base_path}")

    for _ in range(args.count):
        generate_random_file(base_path)

    print("[âœ“] Random file population complete.")

if __name__ == "__main__":
    main()
